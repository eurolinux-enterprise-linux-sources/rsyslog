diff -up rsyslog-5.8.10/runtime/cfsysline.c.orig rsyslog-5.8.10/runtime/cfsysline.c
--- rsyslog-5.8.10/runtime/cfsysline.c.orig	2012-04-05 14:10:45.000000000 +0200
+++ rsyslog-5.8.10/runtime/cfsysline.c	2013-07-16 13:17:37.408545136 +0200
@@ -338,11 +338,13 @@ static int doParseOnOffOption(uchar **pp
  */
 static rsRetVal doGetGID(uchar **pp, rsRetVal (*pSetHdlr)(void*, uid_t), void *pVal)
 {
-	struct group *pgBuf;
+	struct group *pgBuf = NULL;
 	struct group gBuf;
 	DEFiRet;
 	uchar szName[256];
-	char stringBuf[2048];	/* I hope this is large enough... */
+	int bufSize = 1024;
+	char * stringBuf = NULL;
+	int err;
 
 	assert(pp != NULL);
 	assert(*pp != NULL);
@@ -352,10 +354,21 @@ static rsRetVal doGetGID(uchar **pp, rsR
 		ABORT_FINALIZE(RS_RET_NOT_FOUND);
 	}
 
-	getgrnam_r((char*)szName, &gBuf, stringBuf, sizeof(stringBuf), &pgBuf);
+	do {
+		/* Increase bufsize and try again.*/
+		bufSize *= 2;
+		CHKmalloc(stringBuf = realloc(stringBuf, bufSize));
+		err = getgrnam_r((char*)szName, &gBuf, stringBuf, bufSize, &pgBuf);
+	} while((pgBuf == NULL) && (err == ERANGE));
 
 	if(pgBuf == NULL) {
-		errmsg.LogError(0, RS_RET_NOT_FOUND, "ID for group '%s' could not be found or error", (char*)szName);
+		if (err != 0) {
+			rs_strerror_r(err, stringBuf, bufSize);
+			errmsg.LogError(0, RS_RET_NOT_FOUND, "Query for group '%s' resulted in an error: %s\n",
+				(char*)szName, stringBuf);
+		} else {
+			errmsg.LogError(0, RS_RET_NOT_FOUND, "ID for group '%s' could not be found", (char*)szName);
+		}
 		iRet = RS_RET_NOT_FOUND;
 	} else {
 		if(pSetHdlr == NULL) {
@@ -371,6 +384,7 @@ static rsRetVal doGetGID(uchar **pp, rsR
 	skipWhiteSpace(pp); /* skip over any whitespace */
 
 finalize_it:
+	free(stringBuf);
 	RETiRet;
 }
 
